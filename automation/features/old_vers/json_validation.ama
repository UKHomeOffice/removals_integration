Feature: Let's validate out JSON file
 As someone who loves and cherishes JASON 
 I want to validate our JSON
 So that it will be accepted by the RemovalAPI

#javascript
Scenario: JSON validation
    Given I load the JSON file "sample_input.json"
    Then the JSON should be valid according to this schema:
    """
	{
	  "$schema": "http://json-schema.org/draft-04/schema#",
	  "type": "object",
	  "properties": {
	    "individuals": {
	      "title": "individuals",
	      "description": "details of individuals arriving and/or departing from an IRC",
	      "type": "object",
	      "properties": {
	        "arrivals": {
	          "title": "arrivals",
	          "description": "details of individuals arriving into an IRC",
	          "type": "array",
	          "items": {
	            "type": "object",
	            "additionalProperties": false,
	            "properties": {
	              "date":               {"type": "string", "pattern": "^[0-9]{2}-[0-9]{2}-[0-9]{4}$"},
	              "time":               {"type": "string", "pattern": "^[0-9]{2}:[0-9]{2}:[0-9]{2}$"},
	              "cid_id":             {"type": "string", "minLength":1,"maxLength":15},
	              "nationality":        {"type": "string", "minLength":1,"maxLength":50},
	              "gender":             {"type": "string", "minLength":1,"maxLength":1, "enum":["m","f","M", "F"]},
	              "centre":             {"type": "string", "minLength":1,"maxLength":30},
	              "arrived_from":       {"type": "string", "minLength":1,"maxLength":50},
	              "transferred_from":   {"type": "string", "minLength":0,"maxLength":50},
	              "transfer_details":   {"type": "string", "minLength":0,"maxLength":1000}
	            },
	            "required": ["date", "time", "cid_id", "nationality", "gender", "centre", "arrived_from"]
	          }
	        },
	        "departees": {
	          "title": "departees",
	          "description": "details of individuals departing an IRC",
	          "type": "array",
	          "items": {
	            "type": "object",
	            "additionalProperties": false,
	            "properties": {
	              "date":               {"type": "string", "pattern": "^[0-9]{2}-[0-9]{2}-[0-9]{4}$"},
	              "time":               {"type": "string", "pattern": "^[0-9]{2}:[0-9]{2}:[0-9]{2}$"},
	              "cid_id":             {"type": "string", "minLength":1,"maxLength":15},
	              "nationality":        {"type": "string", "minLength":1,"maxLength":50},
	              "gender":             {"type": "string", "minLength":1,"maxLength":1, "enum":["m","f","M", "F"]},
	              "centre":             {"type": "string", "minLength":1,"maxLength":30},
	              "transferred_to":     {"type": "string", "minLength":0,"maxLength":50},
	              "reason_for_leaving": {"type": "string", "minLength":1,"maxLength":50},
	              "transfer_details":   {"type": "string", "minLength":0,"maxLength":1000}
	            },
	            "required":["date", "time", "cid_id", "nationality", "gender", "centre", "reason_for_leaving"]
	          }
	        }
	      },
	      "required": ["arrivals","departees"]
	    },
	    "totals":{
	      "type":"object",
	      "properties":{
	        "date":                     {"type": "string", "pattern": "^[0-9]{2}-[0-9]{2}-[0-9]{4}$"},
	        "time":                     {"type": "string", "pattern": "^[0-9]{2}:[0-9]{2}:[0-9]{2}$"},
	        "bed_counts":{
	          "type":"object",
	          "additionalProperties": false,
	          "patternProperties":{
	            "^[A-Za-z][a-zA-Z -]+$": {
	              "properties":{
	                "male":             {"type":"integer", "minimum": 0, "maximum": 32767},
	                "female":           {"type":"integer", "minimum": 0, "maximum": 32767},
	                "out_of_commission":{"type":"integer", "minimum": 0, "maximum": 32767}
	              },
	              "required":["male","female","out_of_commission"]
	            }
	          }
	        }
	      }
	    }
	  },
	  "required":["totals"]
	}
    """
	